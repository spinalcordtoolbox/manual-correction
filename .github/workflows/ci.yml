# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Install Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.8.18

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # https://github.com/spinalcordtoolbox/spinalcordtoolbox/blob/master/.ci.sh
      - name: Install SCT
        run: |
          git clone https://github.com/spinalcordtoolbox/spinalcordtoolbox.git
          cd spinalcordtoolbox
          ./.ci.sh -i
          # NB: install_sct edits ~/.bashrc, but those environment changes don't get passed to subsequent steps in GH Actions.
          # So, we filter through the .bashrc and pass the values to $GITHUB_ENV and $GITHUB_PATH.
          # Relevant documentation: https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#environment-files
          cat ~/.bashrc | grep "export SCT_DIR" | cut -d " " -f 2 >> $GITHUB_ENV
          cat ~/.bashrc | grep "export PATH" | grep -o "/.*" | cut -d ':' -f 1 >> $GITHUB_PATH

      - name: Run tests with pytest
        run: |
          python -m pytest -v tests/test_utils.py
          python -m pytest -v tests/test_ask_if_modify.py
          python -m pytest -v tests/test_create_json.py
